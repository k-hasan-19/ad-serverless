{"changed":true,"filter":false,"title":"app.py","tooltip":"/jwt-cognito-verify/app.py","value":"import os\nimport json\nimport time\nimport urllib.request\nfrom jose import jwk, jwt\nfrom jose.utils import base64url_decode\n\nregion = os.getenv('AWS_REGION')\nuserpool_id = os.getenv('USER_POOL_ID')\napp_client_id = os.getenv('APP_CLIENT_ID')\nkeys_url = 'https://cognito-idp.{}.amazonaws.com/{}/.well-known/jwks.json'.format(region, userpool_id)\n# instead of re-downloading the public keys every time\n# we download them only on cold start\n# https://aws.amazon.com/blogs/compute/container-reuse-in-lambda/\nwith urllib.request.urlopen(keys_url) as f:\n  response = f.read()\nkeys = json.loads(response.decode('utf-8'))['keys']\n\ndef lambda_handler(event, context):\n    token = event['token']\n    # get the kid from the headers prior to verification\n    headers = jwt.get_unverified_headers(token)\n    kid = headers['kid']\n    # search for the kid in the downloaded public keys\n    key_index = -1\n    for i in range(len(keys)):\n        if kid == keys[i]['kid']:\n            key_index = i\n            break\n    if key_index == -1:\n        print('Public key not found in jwks.json')\n        return False\n    # construct the public key\n    public_key = jwk.construct(keys[key_index])\n    # get the last two sections of the token,\n    # message and signature (encoded in base64)\n    message, encoded_signature = str(token).rsplit('.', 1)\n    # decode the signature\n    decoded_signature = base64url_decode(encoded_signature.encode('utf-8'))\n    # verify the signature\n    if not public_key.verify(message.encode(\"utf8\"), decoded_signature):\n        print('Signature verification failed')\n        return False\n    print('Signature successfully verified')\n    # since we passed the verification, we can now safely\n    # use the unverified claims\n    claims = jwt.get_unverified_claims(token)\n    # additionally we can verify the token expiration\n    if time.time() > claims['exp']:\n        print('Token is expired')\n        return False\n    # and the Audience  (use claims['client_id'] if verifying an access token)\n    if claims['aud'] != app_client_id:\n        print('Token was not issued for this audience')\n        return False\n    # now we can use the claims\n    print(claims)\n    return claims\n        \n# the following is useful to make this script executable in both\n# AWS Lambda and any other local environments\nif __name__ == '__main__':\n    # for testing locally you can enter the JWT ID Token here\n    event = {'Token': ''}\n    lambda_handler(event, None)","undoManager":{"mark":0,"position":1,"stack":[[{"start":{"row":74,"column":14},"end":{"row":74,"column":19},"action":"remove","lines":["token"],"id":23},{"start":{"row":74,"column":14},"end":{"row":74,"column":15},"action":"insert","lines":["T"]},{"start":{"row":74,"column":15},"end":{"row":74,"column":16},"action":"insert","lines":["o"]},{"start":{"row":74,"column":16},"end":{"row":74,"column":17},"action":"insert","lines":["k"]},{"start":{"row":74,"column":17},"end":{"row":74,"column":18},"action":"insert","lines":["e"]},{"start":{"row":74,"column":18},"end":{"row":74,"column":19},"action":"insert","lines":["n"]}],[{"start":{"row":0,"column":0},"end":{"row":10,"column":0},"action":"remove","lines":["# Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.","#","# Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file","# except in compliance with the License. A copy of the License is located at","#","#     http://aws.amazon.com/apache2.0/","#","# or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\"","# BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the","# License for the specific language governing permissions and limitations under the License.",""],"id":24},{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"remove","lines":["",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1580968945413}