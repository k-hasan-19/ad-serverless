{"filter":false,"title":"eap-openapi.yml","tooltip":"/eap-openapi.yml","undoManager":{"mark":3,"position":3,"stack":[[{"start":{"row":0,"column":0},"end":{"row":503,"column":33},"action":"remove","lines":["openapi: 3.0.0","# Added by API Auto Mocking Plugin","servers:","  - description: SwaggerHub API Auto Mocking","    url: https://virtserver.swaggerhub.com/k-hasan-19/eap/1.0.0","info:","# https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions.html","  title: EAP InNeed API","  description: EAP CRUD & Analytics web service","  version: '0.6'","  contact:","    email: kamrul@inneed.cloud","","x-amazon-apigateway-request-validators:","  basic:","    validateRequestBody: true","    validateRequestParameters: true","  params-only:","    validateRequestBody: false","    validateRequestParameters: true","  ","","","paths:","  /company:","    get:","      tags:","        - companies","      summary: Returns a Company meta information by ID","      operationId: getCompanyById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass an company id for looking up company meta information","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of company meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetCompanyFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - companies","      summary: Creates a new Company.","      operationId: addCompany","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/Company'","        description: Company information to add","      responses:","        '200':","          description: 'Company updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '201':","          description: 'Company created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '400':","          description: 'Invalid input'","        '409':","          description: 'Item already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutCompanyFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /user:","    get:","      tags:","        - users","      summary: Returns a User meta information by ID","      operationId: getUserById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass an company id for looking up relevant user meta information","          schema:","            type : string","            format: uuid","        - name: user_id","          in: query","          required: true","          description: pass an user id for looking up user meta information","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of user meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetUserFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - users","      summary: Creates a new User.","      operationId: addUser","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/User'","        description: User information to add","      responses:","        '200':","          description: 'User updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","        '201':","          description: 'User created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","          ","        '400':","          description: 'Invalid input'","        '409':","          description: 'User already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutUserFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /post:","    get:","      tags:","        - posts","      summary: Returns a Post information by ID","      operationId: getPostById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Post details","          schema:","            type : string","            format: uuid","        - name: post_id","          in: query","          required: true","          description: pass a post id for looking up Post details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of user meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetPostFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - posts","      summary: Creates a new Post.","      operationId: addPost","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/Post'","        description: Post details to add","      responses:","        '200':","          description: 'Post updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","        '201':","          description: 'Post created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","          ","        '400':","          description: 'Invalid input'","        '409':","          description: 'Post already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutPostFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postsByCompany:","    get:","      tags:","        - posts","      summary: Returns recent Posts details by a company","      operationId: getPostsByCompany","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Posts details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A array posts meta information","          content:","            application/json:","              schema:","                type : array","                items:","                  $ref: \"#/components/schemas/Post\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetCompanyPostsFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postsByAdminUser:","    get:","      tags:","        - posts","      summary: Returns recent Posts details by admin user id","      operationId: getPostsByAdminUser","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Posts details","          schema:","            type : string","            format: uuid","        - name: user_id","          in: query","          required: true","          description: pass a user id for looking up Posts details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A array posts meta information","          content:","            application/json:","              schema:","                type : array","                items:","                  $ref: \"#/components/schemas/Post\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetAdminPostsFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /share:","    post:","      tags:","        - share","      summary: Posts users post share event","      operationId: sharePost","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/PostShare'","        description: Share event details to add","      responses:","        '201':","          description: 'Share event created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/PostShare'","          ","        '400':","          description: 'Invalid input'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPostShareEventFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  ","","components:","  schemas:","    Company:","      properties:","        company_id:","          type: string","          format: uuid","        name:","          type: string","          minLength: 3","          maxLength: 40","        domain:","          type: string","          format: hostname","        address:","          type: string","        created_at:","          type: string","          format: date-time","        updated_at:","          type: string","          format: date-time","      required:","        - name","        - domain","        - address","        ","    User:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        email:","          type: string","          format: email","        first_name:","          type: string","          minLength: 3","          maxLength: 10","        last_name:","          type: string","          minLength: 3","          maxLength: 10","        address:","          type: string","        created_at:","          type: string","          format: date-time","        updated_at:","          type: string","          format: date-time","        is_admin:","          type: boolean","      required:","        - company_id","        - email","        - first_name","        - last_name","        - is_admin","    Post:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        post_id:","          type: string","          format: uuid","        post_title:","          type: string","          minLength: 3","          maxLength: 60","        post_content:","          type: string","        can_share_on:","          $ref: '#/components/schemas/CanShareOnArray'","        points_map:","          $ref: '#/components/schemas/PointsMap'","        created_at:","          type: string","          format: date-time","        post_created_at:","          type: integer","          description: NoSQL GSI","        updated_at:","          type: string","          format: date-time","      required:","        - company_id","        - user_id","        - post_title","        - post_content","    PostShare:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        post_id:","          type: string","          format: uuid","        points:","          type: integer","        shared_on:","          $ref: '#/components/schemas/CanShareOn'","        created_at:","          type: string","          format: date-time","      required:","        - company_id","        - user_id","        - post_id","        - points","        - shared_on","","    CanShareOnArray:","      type: array","      items:","        $ref: '#/components/schemas/CanShareOn'","    CanShareOn:","      type: string","      enum: [TWITTER, FACEBOOK, LINKEDIN]","    PointsMap:","      type: object","      properties:","        TWITTER:","          type: integer","        FACEBOOK:","          type: integer","        LINKEDIN:","          type: integer","        # $ref: '#/components/schemas/CanShareOn'","      additionalProperties: false"],"id":413},{"start":{"row":0,"column":0},"end":{"row":577,"column":33},"action":"insert","lines":["openapi: 3.0.0","# Added by API Auto Mocking Plugin","servers:","  - description: SwaggerHub API Auto Mocking","    url: https://virtserver.swaggerhub.com/k-hasan-19/eap/1.0.0","info:","# https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions.html","  title: EAP InNeed API","  description: EAP CRUD & Analytics web service","  version: '0.7'","  contact:","    email: kamrul@inneed.cloud","","x-amazon-apigateway-request-validators:","  basic:","    validateRequestBody: true","    validateRequestParameters: true","  params-only:","    validateRequestBody: false","    validateRequestParameters: true","  ","","","paths:","  /company:","    get:","      tags:","        - companies","      summary: Returns a Company meta information by ID","      operationId: getCompanyById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass an company id for looking up company meta information","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of company meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetCompanyFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - companies","      summary: Creates a new Company.","      operationId: addCompany","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/Company'","        description: Company information to add","      responses:","        '200':","          description: 'Company updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '201':","          description: 'Company created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '400':","          description: 'Invalid input'","        '409':","          description: 'Item already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutCompanyFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /user:","    get:","      tags:","        - users","      summary: Returns a User meta information by ID","      operationId: getUserById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass an company id for looking up relevant user meta information","          schema:","            type : string","            format: uuid","        - name: user_id","          in: query","          required: true","          description: pass an user id for looking up user meta information","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of user meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetUserFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - users","      summary: Creates a new User.","      operationId: addUser","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/User'","        description: User information to add","      responses:","        '200':","          description: 'User updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","        '201':","          description: 'User created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","          ","        '400':","          description: 'Invalid input'","        '409':","          description: 'User already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutUserFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /post:","    get:","      tags:","        - posts","      summary: Returns a Post information by ID","      operationId: getPostById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Post details","          schema:","            type : string","            format: uuid","        - name: post_id","          in: query","          required: true","          description: pass a post id for looking up Post details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of user meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetPostFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - posts","      summary: Creates a new Post.","      operationId: addPost","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/Post'","        description: Post details to add","      responses:","        '200':","          description: 'Post updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","        '201':","          description: 'Post created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","          ","        '400':","          description: 'Invalid input'","        '409':","          description: 'Post already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutPostFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postsByCompany:","    get:","      tags:","        - posts","      summary: Returns recent Posts details by a company","      operationId: getPostsByCompany","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Posts details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A array posts meta information","          content:","            application/json:","              schema:","                type : array","                items:","                  $ref: \"#/components/schemas/Post\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetCompanyPostsFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postsByAdminUser:","    get:","      tags:","        - posts","      summary: Returns recent Posts details by admin user id","      operationId: getPostsByAdminUser","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Posts details","          schema:","            type : string","            format: uuid","        - name: user_id","          in: query","          required: true","          description: pass a user id for looking up Posts details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A array posts meta information","          content:","            application/json:","              schema:","                type : array","                items:","                  $ref: \"#/components/schemas/Post\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetAdminPostsFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /share:","    post:","      tags:","        - share","      summary: Posts users post share event","      operationId: sharePost","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/PostShare'","        description: Share event details to add","      responses:","        '201':","          description: 'Share event created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/PostShare'","          ","        '400':","          description: 'Invalid input'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPostShareEventFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postShareDetailsForUser:","    get:","      tags:","        - share-details","      summary: Returns post share details for a user","      operationId: getPostShareDetailsForUser","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Post share details for the user id","          schema:","            type : string","            format: uuid","        - name: post_id","          in: query","          required: true","          description: pass a post id for looking up Post share details for the user id","          schema:","            type : string","            format: uuid","        - name: user_id","          in: query","          required: true","          description: pass a user id for looking up Post share details for the user","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A object of post share meta information for the user","          content:","            application/json:","              schema:","                type : object","                properties:","                  post_id:","                    type: string","                    format: uuid","                  shared_on:","                    $ref: \"#/components/schemas/CanShareOnArray\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPostShareDetailsForUserFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  ","","components:","  schemas:","    Company:","      properties:","        company_id:","          type: string","          format: uuid","        name:","          type: string","          minLength: 3","          maxLength: 40","        domain:","          type: string","          format: hostname","        address:","          type: string","        created_at:","          type: string","          format: date-time","        updated_at:","          type: string","          format: date-time","      required:","        - name","        - domain","        - address","        ","    User:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        email:","          type: string","          format: email","        first_name:","          type: string","          minLength: 3","          maxLength: 10","        last_name:","          type: string","          minLength: 3","          maxLength: 10","        address:","          type: string","        created_at:","          type: string","          format: date-time","        updated_at:","          type: string","          format: date-time","        is_admin:","          type: boolean","      required:","        - company_id","        - email","        - first_name","        - last_name","        - is_admin","    Post:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        post_id:","          type: string","          format: uuid","        post_title:","          type: string","          minLength: 3","          maxLength: 60","        post_content:","          type: string","        can_share_on:","          $ref: '#/components/schemas/CanShareOnArray'","        points_map:","          $ref: '#/components/schemas/PointsMap'","        created_at:","          type: string","          format: date-time","        post_created_at:","          type: integer","          description: NoSQL GSI","        updated_at:","          type: string","          format: date-time","      required:","        - company_id","        - user_id","        - post_title","        - post_content","    PostShare:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        post_id:","          type: string","          format: uuid","        points:","          type: integer","        shared_on:","          $ref: '#/components/schemas/CanShareOn'","        created_at:","          type: string","          format: date-time","      required:","        - company_id","        - user_id","        - post_id","        - points","        - shared_on","        ","    PostShareDetails:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        post_id:","          type: string","          format: uuid","        shared_on:","          type: array","          items:","            $ref: '#/components/schemas/CanShareOn'","      required:","        - company_id","        - user_id","        - post_id","        ","","    CanShareOnArray:","      type: array","      items:","        $ref: '#/components/schemas/CanShareOn'","    CanShareOn:","      type: string","      enum: [TWITTER, FACEBOOK, LINKEDIN]","    PointsMap:","      type: object","      properties:","        TWITTER:","          type: integer","        FACEBOOK:","          type: integer","        LINKEDIN:","          type: integer","        # $ref: '#/components/schemas/CanShareOn'","      additionalProperties: false"]}],[{"start":{"row":0,"column":0},"end":{"row":577,"column":33},"action":"remove","lines":["openapi: 3.0.0","# Added by API Auto Mocking Plugin","servers:","  - description: SwaggerHub API Auto Mocking","    url: https://virtserver.swaggerhub.com/k-hasan-19/eap/1.0.0","info:","# https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions.html","  title: EAP InNeed API","  description: EAP CRUD & Analytics web service","  version: '0.7'","  contact:","    email: kamrul@inneed.cloud","","x-amazon-apigateway-request-validators:","  basic:","    validateRequestBody: true","    validateRequestParameters: true","  params-only:","    validateRequestBody: false","    validateRequestParameters: true","  ","","","paths:","  /company:","    get:","      tags:","        - companies","      summary: Returns a Company meta information by ID","      operationId: getCompanyById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass an company id for looking up company meta information","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of company meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetCompanyFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - companies","      summary: Creates a new Company.","      operationId: addCompany","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/Company'","        description: Company information to add","      responses:","        '200':","          description: 'Company updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '201':","          description: 'Company created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '400':","          description: 'Invalid input'","        '409':","          description: 'Item already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutCompanyFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /user:","    get:","      tags:","        - users","      summary: Returns a User meta information by ID","      operationId: getUserById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass an company id for looking up relevant user meta information","          schema:","            type : string","            format: uuid","        - name: user_id","          in: query","          required: true","          description: pass an user id for looking up user meta information","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of user meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetUserFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - users","      summary: Creates a new User.","      operationId: addUser","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/User'","        description: User information to add","      responses:","        '200':","          description: 'User updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","        '201':","          description: 'User created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","          ","        '400':","          description: 'Invalid input'","        '409':","          description: 'User already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutUserFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /post:","    get:","      tags:","        - posts","      summary: Returns a Post information by ID","      operationId: getPostById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Post details","          schema:","            type : string","            format: uuid","        - name: post_id","          in: query","          required: true","          description: pass a post id for looking up Post details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of user meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetPostFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - posts","      summary: Creates a new Post.","      operationId: addPost","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/Post'","        description: Post details to add","      responses:","        '200':","          description: 'Post updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","        '201':","          description: 'Post created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","          ","        '400':","          description: 'Invalid input'","        '409':","          description: 'Post already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutPostFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postsByCompany:","    get:","      tags:","        - posts","      summary: Returns recent Posts details by a company","      operationId: getPostsByCompany","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Posts details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A array posts meta information","          content:","            application/json:","              schema:","                type : array","                items:","                  $ref: \"#/components/schemas/Post\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetCompanyPostsFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postsByAdminUser:","    get:","      tags:","        - posts","      summary: Returns recent Posts details by admin user id","      operationId: getPostsByAdminUser","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Posts details","          schema:","            type : string","            format: uuid","        - name: user_id","          in: query","          required: true","          description: pass a user id for looking up Posts details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A array posts meta information","          content:","            application/json:","              schema:","                type : array","                items:","                  $ref: \"#/components/schemas/Post\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetAdminPostsFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /share:","    post:","      tags:","        - share","      summary: Posts users post share event","      operationId: sharePost","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/PostShare'","        description: Share event details to add","      responses:","        '201':","          description: 'Share event created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/PostShare'","          ","        '400':","          description: 'Invalid input'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPostShareEventFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postShareDetailsForUser:","    get:","      tags:","        - share-details","      summary: Returns post share details for a user","      operationId: getPostShareDetailsForUser","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Post share details for the user id","          schema:","            type : string","            format: uuid","        - name: post_id","          in: query","          required: true","          description: pass a post id for looking up Post share details for the user id","          schema:","            type : string","            format: uuid","        - name: user_id","          in: query","          required: true","          description: pass a user id for looking up Post share details for the user","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A object of post share meta information for the user","          content:","            application/json:","              schema:","                type : object","                properties:","                  post_id:","                    type: string","                    format: uuid","                  shared_on:","                    $ref: \"#/components/schemas/CanShareOnArray\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPostShareDetailsForUserFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  ","","components:","  schemas:","    Company:","      properties:","        company_id:","          type: string","          format: uuid","        name:","          type: string","          minLength: 3","          maxLength: 40","        domain:","          type: string","          format: hostname","        address:","          type: string","        created_at:","          type: string","          format: date-time","        updated_at:","          type: string","          format: date-time","      required:","        - name","        - domain","        - address","        ","    User:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        email:","          type: string","          format: email","        first_name:","          type: string","          minLength: 3","          maxLength: 10","        last_name:","          type: string","          minLength: 3","          maxLength: 10","        address:","          type: string","        created_at:","          type: string","          format: date-time","        updated_at:","          type: string","          format: date-time","        is_admin:","          type: boolean","      required:","        - company_id","        - email","        - first_name","        - last_name","        - is_admin","    Post:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        post_id:","          type: string","          format: uuid","        post_title:","          type: string","          minLength: 3","          maxLength: 60","        post_content:","          type: string","        can_share_on:","          $ref: '#/components/schemas/CanShareOnArray'","        points_map:","          $ref: '#/components/schemas/PointsMap'","        created_at:","          type: string","          format: date-time","        post_created_at:","          type: integer","          description: NoSQL GSI","        updated_at:","          type: string","          format: date-time","      required:","        - company_id","        - user_id","        - post_title","        - post_content","    PostShare:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        post_id:","          type: string","          format: uuid","        points:","          type: integer","        shared_on:","          $ref: '#/components/schemas/CanShareOn'","        created_at:","          type: string","          format: date-time","      required:","        - company_id","        - user_id","        - post_id","        - points","        - shared_on","        ","    PostShareDetails:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        post_id:","          type: string","          format: uuid","        shared_on:","          type: array","          items:","            $ref: '#/components/schemas/CanShareOn'","      required:","        - company_id","        - user_id","        - post_id","        ","","    CanShareOnArray:","      type: array","      items:","        $ref: '#/components/schemas/CanShareOn'","    CanShareOn:","      type: string","      enum: [TWITTER, FACEBOOK, LINKEDIN]","    PointsMap:","      type: object","      properties:","        TWITTER:","          type: integer","        FACEBOOK:","          type: integer","        LINKEDIN:","          type: integer","        # $ref: '#/components/schemas/CanShareOn'","      additionalProperties: false"],"id":414},{"start":{"row":0,"column":0},"end":{"row":560,"column":33},"action":"insert","lines":["openapi: 3.0.0","# Added by API Auto Mocking Plugin","servers:","  - description: SwaggerHub API Auto Mocking","    url: https://virtserver.swaggerhub.com/k-hasan-19/eap/1.0.0","info:","# https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions.html","  title: EAP InNeed API","  description: EAP CRUD & Analytics web service","  version: '0.7'","  contact:","    email: kamrul@inneed.cloud","","x-amazon-apigateway-request-validators:","  basic:","    validateRequestBody: true","    validateRequestParameters: true","  params-only:","    validateRequestBody: false","    validateRequestParameters: true","  ","","","paths:","  /company:","    get:","      tags:","        - companies","      summary: Returns a Company meta information by ID","      operationId: getCompanyById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass an company id for looking up company meta information","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of company meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetCompanyFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - companies","      summary: Creates a new Company.","      operationId: addCompany","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/Company'","        description: Company information to add","      responses:","        '200':","          description: 'Company updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '201':","          description: 'Company created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '400':","          description: 'Invalid input'","        '409':","          description: 'Item already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutCompanyFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /user:","    get:","      tags:","        - users","      summary: Returns a User meta information by ID","      operationId: getUserById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass an company id for looking up relevant user meta information","          schema:","            type : string","            format: uuid","        - name: user_id","          in: query","          required: true","          description: pass an user id for looking up user meta information","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of user meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetUserFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - users","      summary: Creates a new User.","      operationId: addUser","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/User'","        description: User information to add","      responses:","        '200':","          description: 'User updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","        '201':","          description: 'User created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","          ","        '400':","          description: 'Invalid input'","        '409':","          description: 'User already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutUserFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /post:","    get:","      tags:","        - posts","      summary: Returns a Post information by ID","      operationId: getPostById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Post details","          schema:","            type : string","            format: uuid","        - name: post_id","          in: query","          required: true","          description: pass a post id for looking up Post details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of user meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetPostFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - posts","      summary: Creates a new Post.","      operationId: addPost","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/Post'","        description: Post details to add","      responses:","        '200':","          description: 'Post updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","        '201':","          description: 'Post created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","          ","        '400':","          description: 'Invalid input'","        '409':","          description: 'Post already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutPostFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postsByCompany:","    get:","      tags:","        - posts","      summary: Returns recent Posts details by a company","      operationId: getPostsByCompany","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Posts details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A array posts meta information","          content:","            application/json:","              schema:","                type : array","                items:","                  $ref: \"#/components/schemas/Post\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetCompanyPostsFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postsByAdminUser:","    get:","      tags:","        - posts","      summary: Returns recent Posts details by admin user id","      operationId: getPostsByAdminUser","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Posts details","          schema:","            type : string","            format: uuid","        - name: user_id","          in: query","          required: true","          description: pass a user id for looking up Posts details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A array posts meta information","          content:","            application/json:","              schema:","                type : array","                items:","                  $ref: \"#/components/schemas/Post\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetAdminPostsFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /share:","    post:","      tags:","        - share","      summary: Posts users post share event","      operationId: sharePost","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/PostShare'","        description: Share event details to add","      responses:","        '201':","          description: 'Share event created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/PostShare'","          ","        '400':","          description: 'Invalid input'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPostShareEventFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postShareDetailsForUser:","    get:","      tags:","        - share-details","      summary: Returns post share details for a user","      operationId: getPostShareDetailsForUser","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Post share details for the user id","          schema:","            type : string","            format: uuid","        - name: post_id","          in: query","          required: true","          description: pass a post id for looking up Post share details for the user id","          schema:","            type : string","            format: uuid","        - name: user_id","          in: query","          required: true","          description: pass a user id for looking up Post share details for the user","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A object of post share meta information for the user","          content:","            application/json:","              schema:","                $ref: \"#/components/schemas/PostShareDetails\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPostShareDetailsForUserFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  ","","components:","  schemas:","    Company:","      properties:","        company_id:","          type: string","          format: uuid","        name:","          type: string","          minLength: 3","          maxLength: 40","        domain:","          type: string","          format: hostname","        address:","          type: string","        created_at:","          type: string","          format: date-time","        updated_at:","          type: string","          format: date-time","      required:","        - name","        - domain","        - address","        ","    User:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        email:","          type: string","          format: email","        first_name:","          type: string","          minLength: 3","          maxLength: 10","        last_name:","          type: string","          minLength: 3","          maxLength: 10","        address:","          type: string","        created_at:","          type: string","          format: date-time","        updated_at:","          type: string","          format: date-time","        is_admin:","          type: boolean","      required:","        - company_id","        - email","        - first_name","        - last_name","        - is_admin","    Post:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        post_id:","          type: string","          format: uuid","        post_title:","          type: string","          minLength: 3","          maxLength: 60","        post_content:","          type: string","        can_share_on:","          $ref: '#/components/schemas/CanShareOnArray'","        points_map:","          $ref: '#/components/schemas/PointsMap'","        created_at:","          type: string","          format: date-time","        post_created_at:","          type: integer","          description: NoSQL GSI","        updated_at:","          type: string","          format: date-time","      required:","        - company_id","        - user_id","        - post_title","        - post_content","    PostShare:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        post_id:","          type: string","          format: uuid","        points:","          type: integer","        shared_on:","          $ref: '#/components/schemas/CanShareOn'","        created_at:","          type: string","          format: date-time","      required:","        - company_id","        - user_id","        - post_id","        - points","        - shared_on","        ","    PostShareDetails:","      type : object","      properties:","        post_id:","          type: string","          format: uuid","        shared_on:","          $ref: \"#/components/schemas/CanShareOnArray\"","        ","","    CanShareOnArray:","      type: array","      items:","        $ref: '#/components/schemas/CanShareOn'","    CanShareOn:","      type: string","      enum: [TWITTER, FACEBOOK, LINKEDIN]","    PointsMap:","      type: object","      properties:","        TWITTER:","          type: integer","        FACEBOOK:","          type: integer","        LINKEDIN:","          type: integer","        # $ref: '#/components/schemas/CanShareOn'","      additionalProperties: false"]}],[{"start":{"row":0,"column":0},"end":{"row":560,"column":33},"action":"remove","lines":["openapi: 3.0.0","# Added by API Auto Mocking Plugin","servers:","  - description: SwaggerHub API Auto Mocking","    url: https://virtserver.swaggerhub.com/k-hasan-19/eap/1.0.0","info:","# https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions.html","  title: EAP InNeed API","  description: EAP CRUD & Analytics web service","  version: '0.7'","  contact:","    email: kamrul@inneed.cloud","","x-amazon-apigateway-request-validators:","  basic:","    validateRequestBody: true","    validateRequestParameters: true","  params-only:","    validateRequestBody: false","    validateRequestParameters: true","  ","","","paths:","  /company:","    get:","      tags:","        - companies","      summary: Returns a Company meta information by ID","      operationId: getCompanyById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass an company id for looking up company meta information","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of company meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetCompanyFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - companies","      summary: Creates a new Company.","      operationId: addCompany","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/Company'","        description: Company information to add","      responses:","        '200':","          description: 'Company updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '201':","          description: 'Company created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '400':","          description: 'Invalid input'","        '409':","          description: 'Item already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutCompanyFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /user:","    get:","      tags:","        - users","      summary: Returns a User meta information by ID","      operationId: getUserById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass an company id for looking up relevant user meta information","          schema:","            type : string","            format: uuid","        - name: user_id","          in: query","          required: true","          description: pass an user id for looking up user meta information","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of user meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetUserFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - users","      summary: Creates a new User.","      operationId: addUser","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/User'","        description: User information to add","      responses:","        '200':","          description: 'User updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","        '201':","          description: 'User created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","          ","        '400':","          description: 'Invalid input'","        '409':","          description: 'User already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutUserFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /post:","    get:","      tags:","        - posts","      summary: Returns a Post information by ID","      operationId: getPostById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Post details","          schema:","            type : string","            format: uuid","        - name: post_id","          in: query","          required: true","          description: pass a post id for looking up Post details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of user meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetPostFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - posts","      summary: Creates a new Post.","      operationId: addPost","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/Post'","        description: Post details to add","      responses:","        '200':","          description: 'Post updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","        '201':","          description: 'Post created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","          ","        '400':","          description: 'Invalid input'","        '409':","          description: 'Post already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutPostFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postsByCompany:","    get:","      tags:","        - posts","      summary: Returns recent Posts details by a company","      operationId: getPostsByCompany","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Posts details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A array posts meta information","          content:","            application/json:","              schema:","                type : array","                items:","                  $ref: \"#/components/schemas/Post\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetCompanyPostsFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postsByAdminUser:","    get:","      tags:","        - posts","      summary: Returns recent Posts details by admin user id","      operationId: getPostsByAdminUser","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Posts details","          schema:","            type : string","            format: uuid","        - name: user_id","          in: query","          required: true","          description: pass a user id for looking up Posts details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A array posts meta information","          content:","            application/json:","              schema:","                type : array","                items:","                  $ref: \"#/components/schemas/Post\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetAdminPostsFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /share:","    post:","      tags:","        - share","      summary: Posts users post share event","      operationId: sharePost","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/PostShare'","        description: Share event details to add","      responses:","        '201':","          description: 'Share event created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/PostShare'","          ","        '400':","          description: 'Invalid input'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPostShareEventFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postShareDetailsForUser:","    get:","      tags:","        - share-details","      summary: Returns post share details for a user","      operationId: getPostShareDetailsForUser","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Post share details for the user id","          schema:","            type : string","            format: uuid","        - name: post_id","          in: query","          required: true","          description: pass a post id for looking up Post share details for the user id","          schema:","            type : string","            format: uuid","        - name: user_id","          in: query","          required: true","          description: pass a user id for looking up Post share details for the user","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A object of post share meta information for the user","          content:","            application/json:","              schema:","                $ref: \"#/components/schemas/PostShareDetails\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPostShareDetailsForUserFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  ","","components:","  schemas:","    Company:","      properties:","        company_id:","          type: string","          format: uuid","        name:","          type: string","          minLength: 3","          maxLength: 40","        domain:","          type: string","          format: hostname","        address:","          type: string","        created_at:","          type: string","          format: date-time","        updated_at:","          type: string","          format: date-time","      required:","        - name","        - domain","        - address","        ","    User:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        email:","          type: string","          format: email","        first_name:","          type: string","          minLength: 3","          maxLength: 10","        last_name:","          type: string","          minLength: 3","          maxLength: 10","        address:","          type: string","        created_at:","          type: string","          format: date-time","        updated_at:","          type: string","          format: date-time","        is_admin:","          type: boolean","      required:","        - company_id","        - email","        - first_name","        - last_name","        - is_admin","    Post:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        post_id:","          type: string","          format: uuid","        post_title:","          type: string","          minLength: 3","          maxLength: 60","        post_content:","          type: string","        can_share_on:","          $ref: '#/components/schemas/CanShareOnArray'","        points_map:","          $ref: '#/components/schemas/PointsMap'","        created_at:","          type: string","          format: date-time","        post_created_at:","          type: integer","          description: NoSQL GSI","        updated_at:","          type: string","          format: date-time","      required:","        - company_id","        - user_id","        - post_title","        - post_content","    PostShare:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        post_id:","          type: string","          format: uuid","        points:","          type: integer","        shared_on:","          $ref: '#/components/schemas/CanShareOn'","        created_at:","          type: string","          format: date-time","      required:","        - company_id","        - user_id","        - post_id","        - points","        - shared_on","        ","    PostShareDetails:","      type : object","      properties:","        post_id:","          type: string","          format: uuid","        shared_on:","          $ref: \"#/components/schemas/CanShareOnArray\"","        ","","    CanShareOnArray:","      type: array","      items:","        $ref: '#/components/schemas/CanShareOn'","    CanShareOn:","      type: string","      enum: [TWITTER, FACEBOOK, LINKEDIN]","    PointsMap:","      type: object","      properties:","        TWITTER:","          type: integer","        FACEBOOK:","          type: integer","        LINKEDIN:","          type: integer","        # $ref: '#/components/schemas/CanShareOn'","      additionalProperties: false"],"id":415},{"start":{"row":0,"column":0},"end":{"row":557,"column":33},"action":"insert","lines":["openapi: 3.0.0","# Added by API Auto Mocking Plugin","servers:","  - description: SwaggerHub API Auto Mocking","    url: https://virtserver.swaggerhub.com/k-hasan-19/eap/1.0.0","info:","# https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions.html","  title: EAP InNeed API","  description: EAP CRUD & Analytics web service","  version: '0.7'","  contact:","    email: kamrul@inneed.cloud","","x-amazon-apigateway-request-validators:","  basic:","    validateRequestBody: true","    validateRequestParameters: true","  params-only:","    validateRequestBody: false","    validateRequestParameters: true","  ","","","paths:","  /company:","    get:","      tags:","        - companies","      summary: Returns a Company meta information by ID","      operationId: getCompanyById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass an company id for looking up company meta information","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of company meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetCompanyFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - companies","      summary: Creates a new Company.","      operationId: addCompany","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/Company'","        description: Company information to add","      responses:","        '200':","          description: 'Company updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '201':","          description: 'Company created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '400':","          description: 'Invalid input'","        '409':","          description: 'Item already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutCompanyFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /user:","    get:","      tags:","        - users","      summary: Returns a User meta information by ID","      operationId: getUserById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass an company id for looking up relevant user meta information","          schema:","            type : string","            format: uuid","        - name: user_id","          in: query","          required: true","          description: pass an user id for looking up user meta information","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of user meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetUserFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - users","      summary: Creates a new User.","      operationId: addUser","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/User'","        description: User information to add","      responses:","        '200':","          description: 'User updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","        '201':","          description: 'User created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","          ","        '400':","          description: 'Invalid input'","        '409':","          description: 'User already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutUserFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /post:","    get:","      tags:","        - posts","      summary: Returns a Post information by ID","      operationId: getPostById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Post details","          schema:","            type : string","            format: uuid","        - name: post_id","          in: query","          required: true","          description: pass a post id for looking up Post details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of user meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetPostFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - posts","      summary: Creates a new Post.","      operationId: addPost","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/Post'","        description: Post details to add","      responses:","        '200':","          description: 'Post updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","        '201':","          description: 'Post created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","          ","        '400':","          description: 'Invalid input'","        '409':","          description: 'Post already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutPostFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postsByCompany:","    get:","      tags:","        - posts","      summary: Returns recent Posts details by a company","      operationId: getPostsByCompany","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Posts details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A array posts meta information","          content:","            application/json:","              schema:","                type : array","                items:","                  $ref: \"#/components/schemas/Post\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetCompanyPostsFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postsByAdminUser:","    get:","      tags:","        - posts","      summary: Returns recent Posts details by admin user id","      operationId: getPostsByAdminUser","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Posts details","          schema:","            type : string","            format: uuid","        - name: user_id","          in: query","          required: true","          description: pass a user id for looking up Posts details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A array posts meta information","          content:","            application/json:","              schema:","                type : array","                items:","                  $ref: \"#/components/schemas/Post\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetAdminPostsFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /share:","    post:","      tags:","        - share","      summary: Posts users post share event","      operationId: sharePost","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/PostShare'","        description: Share event details to add","      responses:","        '201':","          description: 'Share event created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/PostShare'","          ","        '400':","          description: 'Invalid input'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPostShareEventFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postShareDetailsForUser:","    get:","      tags:","        - share-details","      summary: Returns post share details for a user","      operationId: getPostShareDetailsForUser","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Post share details for the user id","          schema:","            type : string","            format: uuid","        - name: post_id","          in: query","          required: true","          description: pass a post id for looking up Post share details for the user id","          schema:","            type : string","            format: uuid","        - name: user_id","          in: query","          required: true","          description: pass a user id for looking up Post share details for the user","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A object of post share meta information for the user","          content:","            application/json:","              schema:","                $ref: \"#/components/schemas/PostShareDetails\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPostShareDetailsForUserFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  ","","components:","  schemas:","    Company:","      properties:","        company_id:","          type: string","          format: uuid","        name:","          type: string","          minLength: 3","          maxLength: 40","        domain:","          type: string","          format: hostname","        address:","          type: string","        created_at:","          type: string","          format: date-time","        updated_at:","          type: string","          format: date-time","      required:","        - name","        - domain","        - address","        ","    User:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        email:","          type: string","          format: email","        first_name:","          type: string","          minLength: 3","          maxLength: 10","        last_name:","          type: string","          minLength: 3","          maxLength: 10","        address:","          type: string","        created_at:","          type: string","          format: date-time","        updated_at:","          type: string","          format: date-time","        is_admin:","          type: boolean","      required:","        - company_id","        - email","        - first_name","        - last_name","        - is_admin","    Post:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        post_id:","          type: string","          format: uuid","        post_title:","          type: string","          minLength: 3","          maxLength: 60","        post_content:","          type: string","        can_share_on:","          $ref: '#/components/schemas/CanShareOnArray'","        points_map:","          $ref: '#/components/schemas/PointsMap'","        created_at:","          type: string","          format: date-time","        post_created_at:","          type: integer","          description: NoSQL GSI","        updated_at:","          type: string","          format: date-time","      required:","        - company_id","        - user_id","        - post_title","        - post_content","    PostShare:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        post_id:","          type: string","          format: uuid","        points:","          type: integer","        shared_on:","          $ref: '#/components/schemas/CanShareOn'","      required:","        - company_id","        - user_id","        - post_id","        - points","        - shared_on","        ","    PostShareDetails:","      type : object","      properties:","        post_id:","          type: string","          format: uuid","        shared_on:","          $ref: \"#/components/schemas/CanShareOnArray\"","        ","","    CanShareOnArray:","      type: array","      items:","        $ref: '#/components/schemas/CanShareOn'","    CanShareOn:","      type: string","      enum: [TWITTER, FACEBOOK, LINKEDIN]","    PointsMap:","      type: object","      properties:","        TWITTER:","          type: integer","        FACEBOOK:","          type: integer","        LINKEDIN:","          type: integer","        # $ref: '#/components/schemas/CanShareOn'","      additionalProperties: false"]}],[{"start":{"row":0,"column":0},"end":{"row":557,"column":33},"action":"remove","lines":["openapi: 3.0.0","# Added by API Auto Mocking Plugin","servers:","  - description: SwaggerHub API Auto Mocking","    url: https://virtserver.swaggerhub.com/k-hasan-19/eap/1.0.0","info:","# https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions.html","  title: EAP InNeed API","  description: EAP CRUD & Analytics web service","  version: '0.7'","  contact:","    email: kamrul@inneed.cloud","","x-amazon-apigateway-request-validators:","  basic:","    validateRequestBody: true","    validateRequestParameters: true","  params-only:","    validateRequestBody: false","    validateRequestParameters: true","  ","","","paths:","  /company:","    get:","      tags:","        - companies","      summary: Returns a Company meta information by ID","      operationId: getCompanyById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass an company id for looking up company meta information","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of company meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetCompanyFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - companies","      summary: Creates a new Company.","      operationId: addCompany","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/Company'","        description: Company information to add","      responses:","        '200':","          description: 'Company updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '201':","          description: 'Company created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '400':","          description: 'Invalid input'","        '409':","          description: 'Item already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutCompanyFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /user:","    get:","      tags:","        - users","      summary: Returns a User meta information by ID","      operationId: getUserById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass an company id for looking up relevant user meta information","          schema:","            type : string","            format: uuid","        - name: user_id","          in: query","          required: true","          description: pass an user id for looking up user meta information","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of user meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetUserFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - users","      summary: Creates a new User.","      operationId: addUser","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/User'","        description: User information to add","      responses:","        '200':","          description: 'User updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","        '201':","          description: 'User created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","          ","        '400':","          description: 'Invalid input'","        '409':","          description: 'User already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutUserFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /post:","    get:","      tags:","        - posts","      summary: Returns a Post information by ID","      operationId: getPostById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Post details","          schema:","            type : string","            format: uuid","        - name: post_id","          in: query","          required: true","          description: pass a post id for looking up Post details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of user meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetPostFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - posts","      summary: Creates a new Post.","      operationId: addPost","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/Post'","        description: Post details to add","      responses:","        '200':","          description: 'Post updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","        '201':","          description: 'Post created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","          ","        '400':","          description: 'Invalid input'","        '409':","          description: 'Post already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutPostFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postsByCompany:","    get:","      tags:","        - posts","      summary: Returns recent Posts details by a company","      operationId: getPostsByCompany","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Posts details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A array posts meta information","          content:","            application/json:","              schema:","                type : array","                items:","                  $ref: \"#/components/schemas/Post\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetCompanyPostsFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postsByAdminUser:","    get:","      tags:","        - posts","      summary: Returns recent Posts details by admin user id","      operationId: getPostsByAdminUser","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Posts details","          schema:","            type : string","            format: uuid","        - name: user_id","          in: query","          required: true","          description: pass a user id for looking up Posts details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A array posts meta information","          content:","            application/json:","              schema:","                type : array","                items:","                  $ref: \"#/components/schemas/Post\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetAdminPostsFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /share:","    post:","      tags:","        - share","      summary: Posts users post share event","      operationId: sharePost","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/PostShare'","        description: Share event details to add","      responses:","        '201':","          description: 'Share event created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/PostShare'","          ","        '400':","          description: 'Invalid input'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPostShareEventFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postShareDetailsForUser:","    get:","      tags:","        - share-details","      summary: Returns post share details for a user","      operationId: getPostShareDetailsForUser","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Post share details for the user id","          schema:","            type : string","            format: uuid","        - name: post_id","          in: query","          required: true","          description: pass a post id for looking up Post share details for the user id","          schema:","            type : string","            format: uuid","        - name: user_id","          in: query","          required: true","          description: pass a user id for looking up Post share details for the user","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A object of post share meta information for the user","          content:","            application/json:","              schema:","                $ref: \"#/components/schemas/PostShareDetails\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPostShareDetailsForUserFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  ","","components:","  schemas:","    Company:","      properties:","        company_id:","          type: string","          format: uuid","        name:","          type: string","          minLength: 3","          maxLength: 40","        domain:","          type: string","          format: hostname","        address:","          type: string","        created_at:","          type: string","          format: date-time","        updated_at:","          type: string","          format: date-time","      required:","        - name","        - domain","        - address","        ","    User:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        email:","          type: string","          format: email","        first_name:","          type: string","          minLength: 3","          maxLength: 10","        last_name:","          type: string","          minLength: 3","          maxLength: 10","        address:","          type: string","        created_at:","          type: string","          format: date-time","        updated_at:","          type: string","          format: date-time","        is_admin:","          type: boolean","      required:","        - company_id","        - email","        - first_name","        - last_name","        - is_admin","    Post:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        post_id:","          type: string","          format: uuid","        post_title:","          type: string","          minLength: 3","          maxLength: 60","        post_content:","          type: string","        can_share_on:","          $ref: '#/components/schemas/CanShareOnArray'","        points_map:","          $ref: '#/components/schemas/PointsMap'","        created_at:","          type: string","          format: date-time","        post_created_at:","          type: integer","          description: NoSQL GSI","        updated_at:","          type: string","          format: date-time","      required:","        - company_id","        - user_id","        - post_title","        - post_content","    PostShare:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        post_id:","          type: string","          format: uuid","        points:","          type: integer","        shared_on:","          $ref: '#/components/schemas/CanShareOn'","      required:","        - company_id","        - user_id","        - post_id","        - points","        - shared_on","        ","    PostShareDetails:","      type : object","      properties:","        post_id:","          type: string","          format: uuid","        shared_on:","          $ref: \"#/components/schemas/CanShareOnArray\"","        ","","    CanShareOnArray:","      type: array","      items:","        $ref: '#/components/schemas/CanShareOn'","    CanShareOn:","      type: string","      enum: [TWITTER, FACEBOOK, LINKEDIN]","    PointsMap:","      type: object","      properties:","        TWITTER:","          type: integer","        FACEBOOK:","          type: integer","        LINKEDIN:","          type: integer","        # $ref: '#/components/schemas/CanShareOn'","      additionalProperties: false"],"id":416},{"start":{"row":0,"column":0},"end":{"row":606,"column":33},"action":"insert","lines":["openapi: 3.0.0","# Added by API Auto Mocking Plugin","servers:","  - description: SwaggerHub API Auto Mocking","    url: https://virtserver.swaggerhub.com/k-hasan-19/eap/1.0.0","info:","# https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions.html","  title: EAP InNeed API","  description: EAP CRUD & Analytics web service","  version: '0.8'","  contact:","    email: kamrul@inneed.cloud","","x-amazon-apigateway-request-validators:","  basic:","    validateRequestBody: true","    validateRequestParameters: true","  params-only:","    validateRequestBody: false","    validateRequestParameters: true","  ","","","paths:","  /company:","    get:","      tags:","        - companies","      summary: Returns a Company meta information by ID","      operationId: getCompanyById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass an company id for looking up company meta information","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of company meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetCompanyFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - companies","      summary: Creates a new Company.","      operationId: addCompany","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/Company'","        description: Company information to add","      responses:","        '200':","          description: 'Company updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '201':","          description: 'Company created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Company'","        '400':","          description: 'Invalid input'","        '409':","          description: 'Item already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutCompanyFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /user:","    get:","      tags:","        - users","      summary: Returns a User meta information by ID","      operationId: getUserById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass an company id for looking up relevant user meta information","          schema:","            type : string","            format: uuid","        - name: user_id","          in: query","          required: true","          description: pass an user id for looking up user meta information","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of user meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetUserFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - users","      summary: Creates a new User.","      operationId: addUser","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/User'","        description: User information to add","      responses:","        '200':","          description: 'User updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","        '201':","          description: 'User created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/User'","          ","        '400':","          description: 'Invalid input'","        '409':","          description: 'User already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutUserFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /post:","    get:","      tags:","        - posts","      summary: Returns a Post information by ID","      operationId: getPostById","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Post details","          schema:","            type : string","            format: uuid","        - name: post_id","          in: query","          required: true","          description: pass a post id for looking up Post details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A JSON object of user meta information","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetPostFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","","    put:","      tags:","        - posts","      summary: Creates a new Post.","      operationId: addPost","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/Post'","        description: Post details to add","      responses:","        '200':","          description: 'Post updated'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","        '201':","          description: 'Post created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/Post'","          ","        '400':","          description: 'Invalid input'","        '409':","          description: 'Post already exists'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPutPostFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postsByCompany:","    get:","      tags:","        - posts","      summary: Returns recent Posts details by a company","      operationId: getPostsByCompany","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Posts details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A array posts meta information","          content:","            application/json:","              schema:","                type : array","                items:","                  $ref: \"#/components/schemas/Post\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetCompanyPostsFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postsByAdminUser:","    get:","      tags:","        - posts","      summary: Returns recent Posts details by admin user id","      operationId: getPostsByAdminUser","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Posts details","          schema:","            type : string","            format: uuid","        - name: user_id","          in: query","          required: true","          description: pass a user id for looking up Posts details","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A array posts meta information","          content:","            application/json:","              schema:","                type : array","                items:","                  $ref: \"#/components/schemas/Post\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPGetAdminPostsFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /share:","    post:","      tags:","        - share","      summary: Posts users post share event","      operationId: sharePost","      requestBody:","        required: true","        content:","          application/json:","            schema:","              $ref: '#/components/schemas/PostShare'","        description: Share event details to add","      responses:","        '201':","          description: 'Share event created'","          content:","            application/json:","              schema:","                $ref: '#/components/schemas/PostShare'","          ","        '400':","          description: 'Invalid input'","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPostShareEventFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postShareDetailsForUser:","    get:","      tags:","        - share-details","      summary: Returns post share details for a user","      operationId: getPostShareDetailsForUser","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Post share details for the user id","          schema:","            type : string","            format: uuid","        - name: post_id","          in: query","          required: true","          description: pass a post id for looking up Post share details for the user id","          schema:","            type : string","            format: uuid","        - name: user_id","          in: query","          required: true","          description: pass a user id for looking up Post share details for the user","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A object of post share meta information for the user","          content:","            application/json:","              schema:","                $ref: \"#/components/schemas/PostShareDetails\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPostShareDetailsForUserFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  /postShareAnalytics:","    get:","      tags:","        - share-details","      summary: Returns post share analytics for a admin user","      operationId: getPostShareAnalytics","      parameters:","        - name: company_id","          in: query","          required: true","          description: pass a company id for looking up relevant Post share analytics for the admin user id","          schema:","            type : string","            format: uuid","        - name: post_id","          in: query","          required: true","          description: pass a post id for looking up Post share analytics for the admin user id","          schema:","            type : string","            format: uuid","      responses:","        '200':    # status code","          description: A object of post share analytics information for the admin user","          content:","            application/json:","              schema:","                $ref: \"#/components/schemas/PostShareAnalytics\"","        '400':","          description: Bad input parameters","          ","      x-amazon-apigateway-integration:","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EAPPostShareAnalyticsFunction.Arn}/invocations","        httpMethod: POST","        passthroughBehavior: WHEN_NO_TEMPLATES","        contentHandling: CONVERT_TO_TEXT","        type: aws_proxy","      x-amazon-apigateway-request-validator: basic","      ","  ","","components:","  schemas:","    Company:","      properties:","        company_id:","          type: string","          format: uuid","        name:","          type: string","          minLength: 3","          maxLength: 40","        domain:","          type: string","          format: hostname","        address:","          type: string","        created_at:","          type: string","          format: date-time","        updated_at:","          type: string","          format: date-time","      required:","        - name","        - domain","        - address","        ","    User:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        email:","          type: string","          format: email","        first_name:","          type: string","          minLength: 3","          maxLength: 10","        last_name:","          type: string","          minLength: 3","          maxLength: 10","        address:","          type: string","        created_at:","          type: string","          format: date-time","        updated_at:","          type: string","          format: date-time","        is_admin:","          type: boolean","      required:","        - company_id","        - email","        - first_name","        - last_name","        - is_admin","    Post:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        post_id:","          type: string","          format: uuid","        post_title:","          type: string","          minLength: 3","          maxLength: 60","        post_content:","          type: string","        can_share_on:","          $ref: '#/components/schemas/CanShareOnArray'","        points_map:","          $ref: '#/components/schemas/PointsMap'","        created_at:","          type: string","          format: date-time","        post_created_at:","          type: integer","          description: NoSQL GSI","        updated_at:","          type: string","          format: date-time","      required:","        - company_id","        - user_id","        - post_title","        - post_content","    PostShare:","      properties:","        company_id:","          type: string","          format: uuid","        user_id:","          type: string","          format: uuid","        post_id:","          type: string","          format: uuid","        points:","          type: integer","        shared_on:","          $ref: '#/components/schemas/CanShareOn'","      required:","        - company_id","        - user_id","        - post_id","        - points","        - shared_on","        ","    PostShareAnalytics:","      type: object","      properties:","        post_id:","          type: string","          format: uuid","        total_share:","          $ref: '#/components/schemas/PointsMap'","        ","    PostShareDetails:","      type : object","      properties:","        post_id:","          type: string","          format: uuid","        shared_on:","          $ref: \"#/components/schemas/CanShareOnArray\"","        ","","    CanShareOnArray:","      type: array","      items:","        $ref: '#/components/schemas/CanShareOn'","    CanShareOn:","      type: string","      enum: [TWITTER, FACEBOOK, LINKEDIN]","    PointsMap:","      type: object","      properties:","        TWITTER:","          type: integer","        FACEBOOK:","          type: integer","        LINKEDIN:","          type: integer","        # $ref: '#/components/schemas/CanShareOn'","      additionalProperties: false"]}]]},"ace":{"folds":[],"scrolltop":7367,"scrollleft":0,"selection":{"start":{"row":606,"column":33},"end":{"row":606,"column":33},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":565,"state":"start","mode":"ace/mode/yaml"}},"timestamp":1579526150650,"hash":"fe47f7fcf030746362a7305559a2a99c5978c058"}